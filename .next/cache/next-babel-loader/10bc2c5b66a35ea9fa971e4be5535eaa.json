{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\sajubajufront\\\\component\\\\topnavbar.js\";\n\nvar __jsx = React.createElement;\nimport React, { Component, useContext } from \"react\";\nimport axios from \"axios\";\nimport { observer } from \"mobx-react-lite\";\nimport { birthContext } from \"../context/birth\";\nimport Link from \"next/link\";\nvar topnavbar = observer(function (_ref) {\n  var shows = _ref.shows;\n  var birthInfo = useContext(birthContext);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    \"class\": \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Primary\"), birthInfo.birth_total, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/d\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, show.name)));\n  })));\n});\n\ntopnavbar.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          data = res.data;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default topnavbar;","map":{"version":3,"sources":["C:/Users/MSI/Desktop/sajubajufront/component/topnavbar.js"],"names":["React","Component","useContext","axios","observer","birthContext","Link","topnavbar","shows","birthInfo","birth_total","map","show","id","name","getInitialProps","get","res","data","console","log","length","entry"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,SAAS,GAAGH,QAAQ,CAAC,gBAAe;AAAA,MAAZI,KAAY,QAAZA,KAAY;AACxC,MAAMC,SAAS,GAAGP,UAAU,CAACG,YAAD,CAA5B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,aAAM,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIGI,SAAS,CAACC,WAJb,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADS;AAAA,GAAV,CADH,CANF,CADF;AAkBD,CApByB,CAA1B;;AAsBAP,SAAS,CAACQ,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACRZ,KAAK,CAACa,GAAN,CAAU,6CAAV,CADQ;;AAAA;AACpBC,UAAAA,GADoB;AAEpBC,UAAAA,IAFoB,GAEbD,GAAG,CAACC,IAFS;AAG1BC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAH0B,2CAKnB;AACLb,YAAAA,KAAK,EAAEU,IAAI,CAACP,GAAL,CAAS,UAACW,KAAD;AAAA,qBAAWA,KAAK,CAACV,IAAjB;AAAA,aAAT;AADF,WALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAUA,eAAeL,SAAf","sourcesContent":["import React, { Component, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { birthContext } from \"../context/birth\";\r\nimport Link from \"next/link\";\r\n\r\nconst topnavbar = observer(({ shows }) => {\r\n  const birthInfo = useContext(birthContext);\r\n  return (\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-primary\">\r\n        Primary\r\n      </button>\r\n      {birthInfo.birth_total}\r\n      <h1>Batman TV Shows</h1>\r\n      <ul>\r\n        {shows.map((show) => (\r\n          <li key={show.id}>\r\n            <Link href=\"/d\">\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\ntopnavbar.getInitialProps = async () => {\r\n  const res = await axios.get(\"http://api.tvmaze.com/search/shows?q=batman\");\r\n  const data = res.data;\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map((entry) => entry.show),\r\n  };\r\n};\r\n\r\nexport default topnavbar;\r\n"]},"metadata":{},"sourceType":"module"}