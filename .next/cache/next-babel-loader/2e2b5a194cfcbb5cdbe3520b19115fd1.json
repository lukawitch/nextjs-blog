{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nimport { observable, action } from \"mobx\";\nimport axios from \"axios\";\nexport var admin = (_class = (_temp = /*#__PURE__*/function () {\n  function admin() {\n    _classCallCheck(this, admin);\n\n    _initializerDefineProperty(this, \"dbTable\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"dbName\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"subtitle\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"contents\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"num\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"tableLength\", _descriptor6, this);\n  }\n\n  _createClass(admin, [{\n    key: \"searchTableInfo\",\n    value: function searchTableInfo() {\n      console.log();\n      return axios.get(\"https://hanstream.gabia.io/searchTable\", {\n        params: {\n          dbName: this.dbName\n        }\n      }).then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        alert(\"error\");\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"searchTable\",\n    value: function () {\n      var _searchTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.searchTableInfo();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function searchTable() {\n        return _searchTable.apply(this, arguments);\n      }\n\n      return searchTable;\n    }()\n  }, {\n    key: \"createTableInfo\",\n    value: function createTableInfo() {\n      var _this = this;\n\n      console.log();\n      return axios.get(\"https://hanstream.gabia.io/adminCreateFile\", {\n        params: {\n          dbName: this.dbName\n        }\n      }).then(function (response) {\n        alert(\"추가완료했습니다.\");\n        console.log(response.data);\n\n        _this.insertTable();\n      }).catch(function (error) {\n        alert(\"error\");\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"createTable\",\n    value: function () {\n      var _createTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.createTableInfo();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createTable() {\n        return _createTable.apply(this, arguments);\n      }\n\n      return createTable;\n    }()\n  }, {\n    key: \"insertTableInfo\",\n    value: function insertTableInfo() {\n      var _this2 = this;\n\n      return axios.get(\"https://hanstream.gabia.io/insertDBValue\", {\n        params: {\n          num: this.num,\n          name: this.dbName\n        }\n      }).then(function (response) {\n        console.log(response.data);\n\n        _this2.getTableLength();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"insertTable\",\n    value: function () {\n      var _insertTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.insertTableInfo();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function insertTable() {\n        return _insertTable.apply(this, arguments);\n      }\n\n      return insertTable;\n    }()\n  }, {\n    key: \"getTableLengthInfo\",\n    value: function getTableLengthInfo() {\n      var _this3 = this;\n\n      return axios.get(\"https://hanstream.gabia.io/getTableLength\", {\n        params: {\n          dbName: this.dbName\n        }\n      }).then(function (response) {\n        console.log(response.data);\n\n        if (response.data === null) {\n          _this3.tableLength = 0;\n        }\n\n        alert(_this3.tableLength);\n\n        _this3.insertValue();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTableLength\",\n    value: function () {\n      var _getTableLength = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getTableLengthInfo();\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTableLength() {\n        return _getTableLength.apply(this, arguments);\n      }\n\n      return getTableLength;\n    }()\n  }, {\n    key: \"insertValueInfo\",\n    value: function insertValueInfo() {\n      return axios.get(\"https://hanstream.gabia.io/insertValue\", {\n        params: {\n          num: this.tableLength + 1,\n          dbName: this.dbName,\n          subtitle: this.subtitle,\n          contents: this.contents\n        }\n      }).then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"insertValue\",\n    value: function () {\n      var _insertValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.insertValueInfo();\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function insertValue() {\n        return _insertValue.apply(this, arguments);\n      }\n\n      return insertValue;\n    }()\n  }, {\n    key: \"getTableInfo\",\n    value: function getTableInfo() {\n      var _this4 = this;\n\n      return axios.get(\"https://hanstream.gabia.io/adminDBTable\", {}).then(function (response) {\n        console.log(response.data);\n        _this4.dbTable = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTable\",\n    value: function () {\n      var _getTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getTableInfo();\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getTable() {\n        return _getTable.apply(this, arguments);\n      }\n\n      return getTable;\n    }()\n  }]);\n\n  return admin;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"dbTable\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"dbName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"subtitle\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"contents\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"num\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"tableLength\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"searchTableInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"searchTableInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"searchTable\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"searchTable\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"createTableInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"createTableInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"createTable\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"createTable\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"insertTableInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"insertTableInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"insertTable\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"insertTable\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getTableLengthInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getTableLengthInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getTableLength\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getTableLength\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"insertValueInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"insertValueInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"insertValue\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"insertValue\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getTableInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getTableInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getTable\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getTable\"), _class.prototype)), _class);","map":{"version":3,"sources":["C:/Users/MSI/Desktop/sajubaju/model/admin.js"],"names":["observable","action","axios","admin","console","log","get","params","dbName","then","response","data","catch","error","alert","searchTableInfo","insertTable","createTableInfo","num","name","getTableLength","insertTableInfo","tableLength","insertValue","getTableLengthInfo","subtitle","contents","insertValueInfo","dbTable","getTableInfo"],"mappings":"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","sourcesContent":["import { observable, action } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nexport class admin {\r\n  @observable dbTable = {};\r\n  @observable dbName = \"\";\r\n  @observable subtitle = \"\";\r\n  @observable contents = \"\";\r\n  @observable num = 0;\r\n  @observable tableLength = 0;\r\n\r\n  @action\r\n  searchTableInfo() {\r\n    console.log();\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/searchTable\", {\r\n        params: {\r\n          dbName: this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async searchTable() {\r\n    await this.searchTableInfo();\r\n  }\r\n  @action\r\n  createTableInfo() {\r\n    console.log();\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/adminCreateFile\", {\r\n        params: {\r\n          dbName: this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\"추가완료했습니다.\");\r\n        console.log(response.data);\r\n        this.insertTable();\r\n      })\r\n      .catch((error) => {\r\n        alert(\"error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async createTable() {\r\n    await this.createTableInfo();\r\n  }\r\n\r\n  @action\r\n  insertTableInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/insertDBValue\", {\r\n        params: {\r\n          num: this.num,\r\n          name: this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.getTableLength();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async insertTable() {\r\n    await this.insertTableInfo();\r\n  }\r\n\r\n  @action\r\n  getTableLengthInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/getTableLength\", {\r\n        params: {\r\n          dbName: this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data === null) {\r\n          this.tableLength = 0;\r\n        }\r\n        alert(this.tableLength);\r\n        this.insertValue();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getTableLength() {\r\n    await this.getTableLengthInfo();\r\n  }\r\n\r\n  @action\r\n  insertValueInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/insertValue\", {\r\n        params: {\r\n          num: this.tableLength + 1,\r\n          dbName: this.dbName,\r\n          subtitle: this.subtitle,\r\n          contents: this.contents,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async insertValue() {\r\n    await this.insertValueInfo();\r\n  }\r\n\r\n  @action\r\n  getTableInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/adminDBTable\", {})\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.dbTable = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getTable() {\r\n    await this.getTableInfo();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}