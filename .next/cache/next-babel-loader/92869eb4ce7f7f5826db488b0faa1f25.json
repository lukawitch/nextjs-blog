{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\sajubajufront\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport App, { Container } from \"next/app\";\nimport { Provider } from \"mobx-react\";\nimport Router from \"next/router\";\nimport withFBQ from \"next-fbq\";\nimport initializeStore from \"../stores/stores\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  static async getInitialProps(appContext) {\n    const kakaoKey = \"79f4a4e9c21f0d6f7f2a173a3c9e130f\";\n    const mobxStore = initializeStore();\n    appContext.ctx.mobxStore = mobxStore;\n    const appProps = await App.getInitialProps(appContext);\n    return _objectSpread({}, appProps, {\n      initialMobxState: mobxStore\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    const isServer = true;\n    this.mobxStore = isServer ? props.initialMobxState : initializeStore(props.initialMobxState);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, _extends({}, this.mobxStore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withFBQ(\"13929382844383\", Router)(MyApp);","map":{"version":3,"sources":["C:/Users/MSI/Desktop/sajubajufront/pages/_app.js"],"names":["React","App","Container","Provider","Router","withFBQ","initializeStore","MyApp","getInitialProps","appContext","kakaoKey","mobxStore","ctx","appProps","initialMobxState","constructor","props","isServer","render","Component","pageProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,OAAO,kCAAP;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAaO,eAAb,CAA6BC,UAA7B,EAAyC;AACvC,UAAMC,QAAQ,GAAG,kCAAjB;AACA,UAAMC,SAAS,GAAGL,eAAe,EAAjC;AACAG,IAAAA,UAAU,CAACG,GAAX,CAAeD,SAAf,GAA2BA,SAA3B;AACA,UAAME,QAAQ,GAAG,MAAMZ,GAAG,CAACO,eAAJ,CAAoBC,UAApB,CAAvB;AACA,6BACKI,QADL;AAEEC,MAAAA,gBAAgB,EAAEH;AAFpB;AAID;;AAEDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,QAAQ,OAAd;AACA,SAAKN,SAAL,GAAiBM,QAAQ,GACrBD,KAAK,CAACF,gBADe,GAErBR,eAAe,CAACU,KAAK,CAACF,gBAAP,CAFnB;AAGD;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKJ,KAAtC;AACA,WACE,MAAC,QAAD,eAAc,KAAKL,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAvCqB;;AA0CxB,eAAef,OAAO,CAAC,gBAAD,EAAmBD,MAAnB,CAAP,CAAkCG,KAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport App, { Container } from \"next/app\";\r\nimport { Provider } from \"mobx-react\";\r\nimport Router from \"next/router\";\r\nimport withFBQ from \"next-fbq\";\r\n\r\nimport initializeStore from \"../stores/stores\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass MyApp extends App {\r\n  // Only uncomment this method if you have blocking data requirements for\r\n  // every single page in your application. This disables the ability to\r\n  // perform automatic static optimization, causing every page in your app to\r\n  // be server-side rendered.\r\n  //\r\n  // static async getInitialProps(appContext) {\r\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  //   const appProps = await App.getInitialProps(appContext);\r\n  //\r\n  //   return { ...appProps }\r\n  // }\r\n  static async getInitialProps(appContext) {\r\n    const kakaoKey = \"79f4a4e9c21f0d6f7f2a173a3c9e130f\";\r\n    const mobxStore = initializeStore();\r\n    appContext.ctx.mobxStore = mobxStore;\r\n    const appProps = await App.getInitialProps(appContext);\r\n    return {\r\n      ...appProps,\r\n      initialMobxState: mobxStore,\r\n    };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const isServer = typeof window === \"undefined\";\r\n    this.mobxStore = isServer\r\n      ? props.initialMobxState\r\n      : initializeStore(props.initialMobxState);\r\n  }\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    return (\r\n      <Provider {...this.mobxStore}>\r\n        <Container>\r\n          <Component {...pageProps} />\r\n        </Container>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFBQ(\"13929382844383\", Router)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}