{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\sajubaju\\\\component\\\\contents\\\\card.js\";\n\nvar __jsx = React.createElement;\n\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { birthContext } from \"../../context/birth\";\nimport { observer } from \"mobx-react-lite\";\nimport CardList from \"./cardlist\";\nimport axios from \"axios\"; //CardFlex 안에 최대 3개가 들어간다고 보면됨\n\nvar card_pc = observer(function (props) {\n  var birthInfo = useContext(birthContext);\n  /*const [loading, setLoading] = useState(true);\r\n  const [contents, setContents] = useState([]);\r\n  useEffect(() => {\r\n    console.log(birthInfo.contentsList);\r\n    setContents(birthInfo.contentsList);\r\n    if (birthInfo.contentsList[0] === undefined) {\r\n      console.log(\"error가 났습니다 페이지를 리로딩 해주세요\");\r\n    }\r\n    if (birthInfo.contentsList.length === 0) {\r\n      // birthInfo.ContentsTitle().then(setLoading(true));\r\n      console.log(birthInfo.contentsList[0]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (loading) return <div>Loading...</div>;*/\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), props.data.map(function (contents, num) {\n    return __jsx(React.Fragment, null, __jsx(Col, {\n      md: \"6\",\n      xs: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, __jsx(CardList, {\n      title: contents.listtitle,\n      num: contents.num,\n      name: contents.name,\n      image: contents.imageLink,\n      props: props,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), \" \"), \" \");\n  })));\n});\n\ncard_pc.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var query, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            _context.next = 3;\n            return axios.get(\"https://hanstream.gabia.io/contentsList\", {});\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.data;\n\n          case 6:\n            data = _context.sent;\n            console.log(data);\n            console.log(\"Show data fetched. Count: \".concat(data.length));\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default card_pc;","map":{"version":3,"sources":["C:/Users/MSI/Desktop/sajubaju/component/contents/card.js"],"names":["React","useState","useContext","useEffect","Row","Col","birthContext","observer","CardList","axios","card_pc","props","birthInfo","data","map","contents","num","listtitle","name","imageLink","getInitialProps","query","get","res","console","log","length"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,QAAQ,CAAC,UAACI,KAAD,EAAW;AAClC,MAAMC,SAAS,GAAGV,UAAU,CAACI,YAAD,CAA5B;AAEA;;;;;;;;;;;;;;;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGK,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,UAACC,QAAD,EAAWC,GAAX;AAAA,WACd,4BACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,KAAK,EAAED,QAAQ,CAACE,SADlB;AAEE,MAAA,GAAG,EAAEF,QAAQ,CAACC,GAFhB;AAGE,MAAA,IAAI,EAAED,QAAQ,CAACG,IAHjB;AAIE,MAAA,KAAK,EAAEH,QAAQ,CAACI,SAJlB;AAKE,MAAA,KAAK,EAAER,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOK,GAPL,CADF,EASS,GATT,CADc;AAAA,GAAf,CAHH,CADF,CADF;AAqBD,CAvCuB,CAAxB;;AAwCAD,OAAO,CAACU,eAAR;AAAA,uEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,YAAAA,KAAlB,QAAkBA,KAAlB;AAAA;AAAA,mBAINZ,KAAK,CAACa,GAAN,CAAU,yCAAV,EAAqD,EAArD,CAJM;;AAAA;AAIlBC,YAAAA,GAJkB;AAAA;AAAA,mBAKLA,GAAG,CAACV,IALC;;AAAA;AAKlBA,YAAAA,IALkB;AAOxBW,YAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAEAW,YAAAA,OAAO,CAACC,GAAR,qCAAyCZ,IAAI,CAACa,MAA9C;AATwB,6CAUjB;AACLb,cAAAA,IAAI,EAAEA;AADD,aAViB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeH,OAAf","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { birthContext } from \"../../context/birth\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport CardList from \"./cardlist\";\r\nimport axios from \"axios\";\r\n\r\n//CardFlex 안에 최대 3개가 들어간다고 보면됨\r\nconst card_pc = observer((props) => {\r\n  const birthInfo = useContext(birthContext);\r\n\r\n  /*const [loading, setLoading] = useState(true);\r\n  const [contents, setContents] = useState([]);\r\n  useEffect(() => {\r\n    console.log(birthInfo.contentsList);\r\n    setContents(birthInfo.contentsList);\r\n    if (birthInfo.contentsList[0] === undefined) {\r\n      console.log(\"error가 났습니다 페이지를 리로딩 해주세요\");\r\n    }\r\n    if (birthInfo.contentsList.length === 0) {\r\n      // birthInfo.ContentsTitle().then(setLoading(true));\r\n      console.log(birthInfo.contentsList[0]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (loading) return <div>Loading...</div>;*/\r\n  return (\r\n    <div>\r\n      <Row>\r\n        {\" \"}\r\n        <br />\r\n        {props.data.map((contents, num) => (\r\n          <>\r\n            <Col md=\"6\" xs=\"6\">\r\n              <CardList\r\n                title={contents.listtitle}\r\n                num={contents.num}\r\n                name={contents.name}\r\n                image={contents.imageLink}\r\n                props={props}\r\n              />{\" \"}\r\n            </Col>{\" \"}\r\n          </>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n});\r\ncard_pc.getInitialProps = async function ({ query }) {\r\n  //const url = require(\"url\");\r\n  //console.log(url);\r\n  //  console.log(query.id);\r\n  const res = await axios.get(\"https://hanstream.gabia.io/contentsList\", {});\r\n  const data = await res.data;\r\n\r\n  console.log(data);\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n  return {\r\n    data: data,\r\n  };\r\n};\r\nexport default card_pc;\r\n"]},"metadata":{},"sourceType":"module"}