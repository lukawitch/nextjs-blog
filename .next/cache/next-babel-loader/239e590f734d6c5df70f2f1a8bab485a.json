{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\sajubaju\\\\component\\\\contents\\\\card.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { birthContext } from \"../../context/birth\";\nimport { observer } from \"mobx-react-lite\";\nimport CardList from \"./cardlist\";\nimport axios from \"axios\"; //CardFlex 안에 최대 3개가 들어간다고 보면됨\n\nconst card_pc = observer(props => {\n  const birthInfo = useContext(birthContext);\n  /*const [loading, setLoading] = useState(true);\r\n  const [contents, setContents] = useState([]);\r\n  useEffect(() => {\r\n    console.log(birthInfo.contentsList);\r\n    setContents(birthInfo.contentsList);\r\n    if (birthInfo.contentsList[0] === undefined) {\r\n      console.log(\"error가 났습니다 페이지를 리로딩 해주세요\");\r\n    }\r\n    if (birthInfo.contentsList.length === 0) {\r\n      // birthInfo.ContentsTitle().then(setLoading(true));\r\n      console.log(birthInfo.contentsList[0]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (loading) return <div>Loading...</div>;*/\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), props.data.map((contents, num) => __jsx(React.Fragment, null, __jsx(Col, {\n    md: \"6\",\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(CardList, {\n    title: contents.listtitle,\n    num: contents.num,\n    name: contents.name,\n    image: contents.imageLink,\n    props: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), \" \"), \" \"))));\n});\n\ncard_pc.getInitialProps = async function ({\n  query\n}) {\n  //const url = require(\"url\");\n  //console.log(url);\n  //  console.log(query.id);\n  const res = await axios.get(\"https://hanstream.gabia.io/contentsList\", {});\n  const data = await res.data;\n  console.log(data);\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    data: data\n  };\n};\n\nexport default card_pc;","map":{"version":3,"sources":["C:/Users/MSI/Desktop/sajubaju/component/contents/card.js"],"names":["React","useState","useContext","useEffect","Row","Col","birthContext","observer","CardList","axios","card_pc","props","birthInfo","data","map","contents","num","listtitle","name","imageLink","getInitialProps","query","res","get","console","log","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAGH,QAAQ,CAAEI,KAAD,IAAW;AAClC,QAAMC,SAAS,GAAGV,UAAU,CAACI,YAAD,CAA5B;AAEA;;;;;;;;;;;;;;;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGK,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,CAACC,QAAD,EAAWC,GAAX,KACd,4BACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAED,QAAQ,CAACE,SADlB;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAACC,GAFhB;AAGE,IAAA,IAAI,EAAED,QAAQ,CAACG,IAHjB;AAIE,IAAA,KAAK,EAAEH,QAAQ,CAACI,SAJlB;AAKE,IAAA,KAAK,EAAER,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOK,GAPL,CADF,EASS,GATT,CADD,CAHH,CADF,CADF;AAqBD,CAvCuB,CAAxB;;AAwCAD,OAAO,CAACU,eAAR,GAA0B,gBAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA2B;AACnD;AACA;AACA;AACA,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,yCAAV,EAAqD,EAArD,CAAlB;AACA,QAAMV,IAAI,GAAG,MAAMS,GAAG,CAACT,IAAvB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BZ,IAAI,CAACa,MAAO,EAArD;AACA,SAAO;AACLb,IAAAA,IAAI,EAAEA;AADD,GAAP;AAGD,CAbD;;AAcA,eAAeH,OAAf","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { birthContext } from \"../../context/birth\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport CardList from \"./cardlist\";\r\nimport axios from \"axios\";\r\n\r\n//CardFlex 안에 최대 3개가 들어간다고 보면됨\r\nconst card_pc = observer((props) => {\r\n  const birthInfo = useContext(birthContext);\r\n\r\n  /*const [loading, setLoading] = useState(true);\r\n  const [contents, setContents] = useState([]);\r\n  useEffect(() => {\r\n    console.log(birthInfo.contentsList);\r\n    setContents(birthInfo.contentsList);\r\n    if (birthInfo.contentsList[0] === undefined) {\r\n      console.log(\"error가 났습니다 페이지를 리로딩 해주세요\");\r\n    }\r\n    if (birthInfo.contentsList.length === 0) {\r\n      // birthInfo.ContentsTitle().then(setLoading(true));\r\n      console.log(birthInfo.contentsList[0]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (loading) return <div>Loading...</div>;*/\r\n  return (\r\n    <div>\r\n      <Row>\r\n        {\" \"}\r\n        <br />\r\n        {props.data.map((contents, num) => (\r\n          <>\r\n            <Col md=\"6\" xs=\"6\">\r\n              <CardList\r\n                title={contents.listtitle}\r\n                num={contents.num}\r\n                name={contents.name}\r\n                image={contents.imageLink}\r\n                props={props}\r\n              />{\" \"}\r\n            </Col>{\" \"}\r\n          </>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n});\r\ncard_pc.getInitialProps = async function ({ query }) {\r\n  //const url = require(\"url\");\r\n  //console.log(url);\r\n  //  console.log(query.id);\r\n  const res = await axios.get(\"https://hanstream.gabia.io/contentsList\", {});\r\n  const data = await res.data;\r\n\r\n  console.log(data);\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n  return {\r\n    data: data,\r\n  };\r\n};\r\nexport default card_pc;\r\n"]},"metadata":{},"sourceType":"module"}