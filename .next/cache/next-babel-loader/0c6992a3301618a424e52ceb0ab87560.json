{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\sajubajufront\\\\pages\\\\search.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Layout from \"../component/Layout\";\nimport { useRouter } from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\n\nvar Search = function Search(props) {\n  var router = useRouter();\n  console.log(props);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, show.name)));\n  })));\n};\n\nSearch.getInitialProps = function _callee(_ref) {\n  var query, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          //const url = require(\"url\");\n          //console.log(url);\n          console.log(query.num);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/MSI/Desktop/sajubajufront/pages/search.js"],"names":["React","useEffect","Layout","useRouter","fetch","Link","Search","props","router","console","log","shows","map","show","id","name","getInitialProps","query","num","res","json","data","length","entry"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADe;AAAA,GAAhB,CADH,CAFF,CADF;AAcD,CAjBD;;AAkBAT,MAAM,CAACU,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,UAAAA,KAAlB,QAAkBA,KAAlB;AACvB;AACA;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACC,GAAlB;AAHuB;AAAA,2CAILd,KAAK,CAAC,8CAAD,CAJA;;AAAA;AAIjBe,UAAAA,GAJiB;AAAA;AAAA,2CAKJA,GAAG,CAACC,IAAJ,EALI;;AAAA;AAKjBC,UAAAA,IALiB;AAOvBZ,UAAAA,OAAO,CAACC,GAAR,qCAAyCW,IAAI,CAACC,MAA9C;AAPuB,2CAShB;AACLX,YAAAA,KAAK,EAAEU,IAAI,CAACT,GAAL,CAAS,UAACW,KAAD;AAAA,qBAAWA,KAAK,CAACV,IAAjB;AAAA,aAAT;AADF,WATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAaA,eAAeP,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport { useRouter } from \"next/router\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Link from \"next/link\";\r\n\r\nconst Search = (props) => {\r\n  const router = useRouter();\r\n  console.log(props);\r\n  return (\r\n    <Layout>\r\n      <h1>Batman TV Shows</h1>\r\n      <ul>\r\n        {props.shows.map((show) => (\r\n          <li key={show.id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\nSearch.getInitialProps = async function ({ query }) {\r\n  //const url = require(\"url\");\r\n  //console.log(url);\r\n  console.log(query.num);\r\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map((entry) => entry.show),\r\n  };\r\n};\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}