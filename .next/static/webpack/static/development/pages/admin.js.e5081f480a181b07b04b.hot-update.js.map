{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.e5081f480a181b07b04b.hot-update.js","sources":["webpack:///./model/admin.js"],"sourcesContent":["import { observable, action } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nexport class admin {\r\n  @observable dbTable = \"\";\r\n  @observable dbTableData = \"\";\r\n  @observable dbName = \"\";\r\n  @observable subtitle = \"\";\r\n  @observable updateSubtitle = {};\r\n  @observable updateContents = {};\r\n  @observable num = 0;\r\n  @observable tableLength = 0;\r\n\r\n  @action\r\n  getTableDataInfo() {\r\n    console.log();\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/getTableData\", {\r\n        params: {\r\n          dbName: \"contents_\" + this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.dbTableData = response.data;\r\n        console.log(this.dbTableData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getTableData() {\r\n    await this.getTableDataInfo();\r\n  }\r\n\r\n  @action\r\n  searchTableInfo() {\r\n    console.log();\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/searchTable\", {\r\n        params: {\r\n          dbName: \"contents_\" + this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.length === 0) {\r\n          alert(\"없는테이블입니다 새로 추가합니다.\");\r\n          this.createTable();\r\n        } else {\r\n          alert(\"있는테이블입니다 기존테이블에 데이터를 추가합니다.\");\r\n          this.getTableLength();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(\"error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async searchTable() {\r\n    await this.searchTableInfo();\r\n  }\r\n  @action\r\n  createTableInfo() {\r\n    console.log();\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/adminCreateFile\", {\r\n        params: {\r\n          dbName: this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\"추가완료했습니다.\");\r\n        console.log(response.data);\r\n        this.insertTable();\r\n      })\r\n      .catch((error) => {\r\n        alert(\"error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async createTable() {\r\n    await this.createTableInfo();\r\n  }\r\n\r\n  @action\r\n  insertTableInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/insertDBValue\", {\r\n        params: {\r\n          num: this.num,\r\n          name: \"contents_\" + this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.getTableLength();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async insertTable() {\r\n    await this.insertTableInfo();\r\n  }\r\n\r\n  @action\r\n  getTableLengthInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/getTableLength\", {\r\n        params: {\r\n          dbName: \"contents_\" + this.dbName,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data[0]);\r\n        if (response.data === null) {\r\n          this.tableLength = 0;\r\n        } else {\r\n          this.tableLength = response.data[0].number;\r\n        }\r\n        alert(this.tableLength);\r\n        this.insertValue();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getTableLength() {\r\n    await this.getTableLengthInfo();\r\n  }\r\n\r\n  @action\r\n  insertValueInfo() {\r\n    console.log(this.tableLength + 1);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/insertValue\", {\r\n        params: {\r\n          num: this.tableLength + 1,\r\n          dbName: \"contents_\" + this.dbName,\r\n          subtitle: this.subtitle,\r\n          contents: this.contents,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async insertValue() {\r\n    await this.insertValueInfo();\r\n  }\r\n\r\n  @action\r\n  getTableInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/adminDBTable\", {})\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.dbTable = response.data;\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          let a = response.data[i].name.split(\"contents_\");\r\n          this.dbTable[i].name = a[1];\r\n        }\r\n        // this.dbTable = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getTable() {\r\n    await this.getTableInfo();\r\n  }\r\n}\r\n"],"mappings":"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","sourceRoot":""}