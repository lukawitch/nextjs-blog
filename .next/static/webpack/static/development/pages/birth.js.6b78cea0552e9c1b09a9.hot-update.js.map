{"version":3,"file":"static/webpack/static\\development\\pages\\birth.js.6b78cea0552e9c1b09a9.hot-update.js","sources":["webpack:///./model/signinup.js"],"sourcesContent":["import { observable, action } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nexport class SigninUp {\r\n  @observable kakaoId = \"\";\r\n  @observable name = \"\";\r\n  @observable JoinOrNot = \"\";\r\n  @observable successOrNot = \"\";\r\n  @observable emailNumber = \"\";\r\n  @observable email = \"\";\r\n  @observable password = \"\";\r\n  @observable emailNumbercheck = \"\";\r\n  @observable memberYear = \"\";\r\n  @observable memberMon = \"\";\r\n  @observable memberDay = \"\";\r\n  //카카오는1 구글은2 네이버는3\r\n  @observable snsNumber = 0;\r\n  //카카오톡 로그인\r\n  getKakaoLoginInfo() {\r\n    console.log(this.kakaoId);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/kakaoLogin\", {\r\n        //.get(\"http://localhost:8001/birth\", {\r\n        params: {\r\n          id: this.kakaoId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.data.length);\r\n        if (response.data.length === 0) {\r\n          this.JoinOrNot = true;\r\n          console.log(this.JoinOrNot);\r\n        } else {\r\n          this.JoinOrNot = false;\r\n          this.name = response.data[0].name;\r\n          this.memberYear = response.data[0].year;\r\n          this.memberMon = response.data[0].mon;\r\n          this.memberDay = response.data[0].day;\r\n          console.log(this.name);\r\n          console.log(this.JoinOrNot);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getKakaoLogin() {\r\n    await this.getKakaoLoginInfo();\r\n  }\r\n  //카카오톡로그인한후 계정이 없는경우, 새로운 계정 만들기\r\n  getKakaoJoinInfo(gender, year, mon, day, time, name) {\r\n    console.log(this.kakaoId);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/kakaoJoin\", {\r\n        params: {\r\n          id: this.kakaoId,\r\n          gender: gender,\r\n          year: year,\r\n          mon: mon,\r\n          day: day,\r\n          time: time,\r\n          name: name,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.successOrNot = true;\r\n        console.log(this.successOrNot);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.successOrNot = false;\r\n        console.log(this.successOrNot);\r\n      });\r\n  }\r\n  @action\r\n  async getKakaoJoin(gender, year, mon, day, time, name) {\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    console.log(name);\r\n    this.name = name;\r\n    await this.getKakaoJoinInfo(gender, year, mon, day, time, name);\r\n  }\r\n\r\n  getGoogleLoginInfo() {\r\n    console.log(this.kakaoId);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/googleLogin\", {\r\n        //.get(\"http://localhost:8001/birth\", {\r\n        params: {\r\n          id: this.kakaoId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.data.length);\r\n        if (response.data.length === 0) {\r\n          this.JoinOrNot = true;\r\n          console.log(this.JoinOrNot);\r\n        } else {\r\n          this.JoinOrNot = false;\r\n          this.name = response.data[0].name;\r\n          this.memberYear = response.data[0].year;\r\n          this.memberMon = response.data[0].mon;\r\n          this.memberDay = response.data[0].day;\r\n          console.log(this.name);\r\n          console.log(this.JoinOrNot);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getGoogleLogin() {\r\n    await this.getGoogleLoginInfo();\r\n  }\r\n\r\n  getGoogleJoinInfo(gender, year, mon, day, time, name) {\r\n    console.log(this.kakaoId);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/googleJoin\", {\r\n        params: {\r\n          id: this.kakaoId,\r\n          gender: gender,\r\n          year: year,\r\n          mon: mon,\r\n          day: day,\r\n          time: time,\r\n          name: name,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.successOrNot = true;\r\n        console.log(this.successOrNot);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.successOrNot = false;\r\n        console.log(this.successOrNot);\r\n      });\r\n  }\r\n  @action\r\n  async getGoogleJoin(gender, year, mon, day, time, name) {\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    console.log(name);\r\n    this.name = name;\r\n    await this.getGoogleJoinInfo(gender, year, mon, day, time, name);\r\n  }\r\n\r\n  getNaverLoginInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/naverLogin\", {\r\n        //.get(\"http://localhost:8001/birth\", {\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getNaverLogin() {\r\n    await this.getNaverLoginInfo();\r\n  }\r\n\r\n  getEmailJoinInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/emailSend?email=\" + this.email, {})\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.emailNumber = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  @action\r\n  async getEmailJoin() {\r\n    console.log(this.email);\r\n    await this.getEmailJoinInfo();\r\n  }\r\n\r\n  getJoinInfo(gender, year, mon, day, time, name) {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/join\", {\r\n        params: {\r\n          id: this.email,\r\n          // password: this.password,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        // this.successOrNot = true;\r\n        //   console.log(this.successOrNot);\r\n        console.log(typeof response.data.length);\r\n        if (response.data.length === 0) {\r\n          console.log(\"join\");\r\n          this.getJoinInput(gender, year, mon, day, time, name);\r\n        } else {\r\n          alert(\"이미 가입되어있는 아이디입니다.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.successOrNot = false;\r\n        alert(\"이미 가입되어있는 아이디입니다.\");\r\n        console.log(this.successOrNot);\r\n      });\r\n  }\r\n  @action\r\n  async getJoin(gender, year, mon, day, time, name) {\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    console.log(name);\r\n    this.name = name;\r\n    await this.getJoinInfo(gender, year, mon, day, time, name);\r\n  }\r\n  getJoinInputInfo(gender, year, mon, day, time, name) {\r\n    console.log(this.kakaoId);\r\n    const d = new Date();\r\n    console.log();\r\n    console.log(this.email);\r\n    console.log(this.password);\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    console.log(name);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/joininput\", {\r\n        params: {\r\n          id: this.email,\r\n          password: this.password,\r\n          gender: gender,\r\n          year: year,\r\n          mon: mon,\r\n          day: day,\r\n          time: time,\r\n          name: name,\r\n          subscriptionTime: d,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.successOrNot = true;\r\n        console.log(this.successOrNot);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.successOrNot = false;\r\n        console.log(this.successOrNot);\r\n      });\r\n  }\r\n  @action\r\n  async getJoinInput(gender, year, mon, day, time, name) {\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    console.log(name);\r\n    this.name = name;\r\n    await this.getJoinInputInfo(gender, year, mon, day, time, name);\r\n  }\r\n\r\n  getBirthInputPersonInfo(gender, year, mon, day, time) {\r\n    const d = new Date();\r\n    console.log();\r\n    console.log(this.email);\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/birthInputPerson\", {\r\n        params: {\r\n          id: \"\",\r\n          gender: gender,\r\n          year: year,\r\n          mon: mon,\r\n          day: day,\r\n          time: time,\r\n          subscriptionTime: d,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.successOrNot = true;\r\n        console.log(this.successOrNot);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.successOrNot = false;\r\n        console.log(this.successOrNot);\r\n      });\r\n  }\r\n  @action\r\n  async getBirthInputPerson(gender, year, mon, day, time) {\r\n    console.log(gender);\r\n    console.log(year);\r\n    console.log(mon);\r\n    console.log(day);\r\n    console.log(time);\r\n    console.log(name);\r\n    this.name = name;\r\n    await this.getBirthInputPersonInfo(gender, year, mon, day, time);\r\n  }\r\n\r\n  getGeneralLoginInfo() {\r\n    return axios\r\n      .get(\"https://hanstream.gabia.io/join\", {\r\n        params: {\r\n          id: this.email,\r\n          password: this.password,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        // this.successOrNot = true;\r\n        //   console.log(this.successOrNot);\r\n        if (response.data.length === 0) {\r\n          alert(\"아이디 혹은 비밀번호가 잘못되었습니다.\");\r\n        } else {\r\n          this.JoinOrNot = false;\r\n          this.kakaoId = this.email;\r\n          this.name = response.data[0].name;\r\n          this.memberYear = response.data[0].year;\r\n          this.memberMon = response.data[0].mon;\r\n          this.memberDay = response.data[0].day;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.successOrNot = false;\r\n        console.log(this.successOrNot);\r\n      });\r\n  }\r\n  @action\r\n  async getGeneralLogin() {\r\n    await this.getGeneralLoginInfo();\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAcA;AAdA;AAeA;AACA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAiDA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AAlFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAsFA;AACA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAlHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAwHA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhJA;AAAA;AAA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","sourceRoot":""}