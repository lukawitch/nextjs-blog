{"version":3,"file":"static/webpack/static\\development\\pages\\result.js.d552aa1b830b7588cc5d.hot-update.js","sources":["webpack:///./pages/result.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, CustomInput } from \"reactstrap\";\r\nimport { birthContext } from \"../context/birth\";\r\nimport Result from \"../component/result/result\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport styles from \"../component/result/result.module.css\";\r\nimport ShareButton from \"../component/result/shareButton\";\r\nimport LoadingPage from \"../component/result/loadingPage\";\r\n\r\nconst resultContents = (props) => {\r\n  let testValue = 0;\r\n  const BirthInfo = useContext(birthContext);\r\n  const router = useRouter();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingTime, setLoadingTime] = useState(0);\r\n  const [countNumber, setCountNumber] = useState(0);\r\n\r\n  //초기설정\r\n  useEffect(() => {\r\n    setCountNumber(props.data[0].goodButton);\r\n    BirthInfo.postGoodOrNot = false;\r\n    const interval = setInterval(() => {\r\n      testValue++;\r\n      setLoadingTime(testValue);\r\n    }, 380);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      clearInterval(interval);\r\n    }, 3800);\r\n  }, []);\r\n  //조아요 버튼 눌렀을때\r\n  const handleChangeGoodOrNot = (e) => {\r\n    BirthInfo.postGoodOrNot = !BirthInfo.postGoodOrNot;\r\n    let value;\r\n    if (BirthInfo.postGoodOrNot === true) {\r\n      value = countNumber + 1;\r\n    } else {\r\n      value = countNumber - 1;\r\n    }\r\n    axios\r\n      .get(\"https://hanstream.gabia.io/goodCount\", {\r\n        params: {\r\n          count: value,\r\n          dbName: router.query.dbname,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setCountNumber(value);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  if (loading) return <LoadingPage />;\r\n\r\n  //Layout\r\n  return (\r\n    <Result>\r\n      <div className={styles.card}>\r\n        <div class=\"card\">\r\n          <img\r\n            src={\r\n              \"/image/\" +\r\n              router.query.dbname +\r\n              \"/\" +\r\n              props.data[0].title +\r\n              \".png\"\r\n            }\r\n            class=\"card-img-top\"\r\n            alt=\"...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={styles.MoreInfoText}> 복채는 하트와 공유로! </div>\r\n      {/*공유버튼*/}\r\n      <ShareButton\r\n        num={props.data[0].num}\r\n        dbname={router.query.dbname}\r\n        countNumber={countNumber}\r\n      />\r\n\r\n      <div className={styles.card}>\r\n        {/*좋아요버튼 나중에 수정할 예정. */}\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"exampleCustomSwitch\"\r\n          name=\"customSwitch\"\r\n          label={countNumber + \"명이 이테스트를 좋아합니다\"}\r\n          onChange={handleChangeGoodOrNot}\r\n        />\r\n      </div>\r\n    </Result>\r\n  );\r\n};\r\nresultContents.getInitialProps = async function ({ query }) {\r\n  const res = await axios.get(\"https://hanstream.gabia.io/birth\", {\r\n    params: {\r\n      month: query.month,\r\n      day: query.day,\r\n      dbName: query.dbname,\r\n    },\r\n  });\r\n  const data = await res.data;\r\n\r\n  console.log(data);\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n  return {\r\n    data: data,\r\n  };\r\n};\r\nexport default resultContents;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAQA;AAEA;AAEA;AAZA;AAcA;AADA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;;;;A","sourceRoot":""}