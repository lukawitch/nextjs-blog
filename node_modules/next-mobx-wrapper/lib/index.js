"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "withMobx", {
  enumerable: true,
  get: function get() {
    return _withMobx.default;
  }
});
exports.getOrCreateStore = exports.BaseStore = void 0;

var _mobx = require("mobx");

var _utils = require("./utils");

var _withMobx = _interopRequireDefault(require("./with-mobx"));

var _class, _descriptor, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }

var __NEXT_MOBX_STORE__ = new Map();

var BaseStore = (_class = (_temp = function BaseStore() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  _classCallCheck(this, BaseStore);

  _initializerDefineProperty(this, "update", _descriptor, this);

  for (var prop in props) {
    // Convert JSON to Map
    this[prop] = (0, _utils.jsonToMap)(props[prop]);
  }
}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "update", [_mobx.action], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    var _this = this;

    return function () {
      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      for (var prop in data) {
        _this[prop] = data[prop];
      }
    };
  }
})), _class);
exports.BaseStore = BaseStore;

var getOrCreateStore = function getOrCreateStore(storeKeyName, Store) {
  return function (initialState) {
    // Convert Map to JSON
    if (initialState) {
      for (var itemState in initialState) {
        try {
          var dataMap = initialState[itemState];

          if (dataMap.toJS() instanceof Map) {
            initialState[itemState] = (0, _utils.mapToJson)(dataMap);
          }
        } catch (e) {}
      }
    } // Always make a new store if server


    if (_utils.isServer) {
      return new Store(initialState);
    } // Create store if unavailable on the client


    if (!__NEXT_MOBX_STORE__.has(storeKeyName)) {
      __NEXT_MOBX_STORE__.set(storeKeyName, new Store(initialState));
    }

    return __NEXT_MOBX_STORE__.get(storeKeyName);
  };
};

exports.getOrCreateStore = getOrCreateStore;
//# sourceMappingURL=index.js.map