{"version":3,"sources":["../src/with-mobx.js"],"names":["getStores","App","appContext","appProps","ctx","store","fnName","storeKeyName","getInitialProps","initialMobxState","props","React","Component"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEe;AAAA,MAACA,SAAD,uEAAa,EAAb;AAAA,SAAoB,UAAAC,GAAG,EAAI;AACxC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAC+BC,UAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,sBAAAA,QAFR,GAEmB,EAFnB,EAII;;AACAD,sBAAAA,UAAU,CAACE,GAAX,CAAeC,KAAf,GAAuB,EAAvB;;AACA,2BAAWC,MAAX,IAAqBN,SAArB,EAAgC;AACxBO,wBAAAA,YADwB,GACT,4BAAgBD,MAAhB,CADS;AAE9BJ,wBAAAA,UAAU,CAACE,GAAX,CAAeC,KAAf,CAAqBE,YAArB,IAAqCP,SAAS,CAACM,MAAD,CAAT,EAArC;AACD;;AATL,4BAWQ,OAAOL,GAAG,CAACO,eAAX,KAA+B,UAXvC;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAYuBP,GAAG,CAACO,eAAJ,CAAoBN,UAApB,CAZvB;;AAAA;AAYMC,sBAAAA,QAZN;;AAAA;AAAA,yEAgBSA,QAhBT;AAiBMM,wBAAAA,gBAAgB,EAAEP,UAAU,CAACE,GAAX,CAAeC;AAjBvC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAqBE,6BAAYK,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,gBAAKL,KAAL,GAAa,EAAb;;AAEA,eAAK,IAAMC,MAAX,IAAqBN,SAArB,EAAgC;AAC9B,gBAAMO,YAAY,GAAG,4BAAgBD,MAAhB,CAArB;AACA,kBAAKD,KAAL,CAAWE,YAAX,IAA2BP,SAAS,CAACM,MAAD,CAAT,CACzBI,KAAK,CAACD,gBAAN,CAAuBF,YAAvB,CADyB,CAA3B;AAGD;;AATgB;AAUlB;;AA/BH;AAAA;AAAA,mCAiCW;AAAA,8BAC8B,KAAKG,KADnC;AAAA,gBACAD,gBADA,eACAA,gBADA;AAAA,gBACqBC,KADrB;;AAGP,mBAAO,6BAAC,GAAD,eAASA,KAAT;AAAgB,cAAA,KAAK,oBAAM,KAAKL,KAAX;AAArB,eAAP;AACD;AArCH;;AAAA;AAAA,QAAiCM,eAAMC,SAAvC;AAAA;AAuCD,GAxCc;AAAA,C","sourcesContent":["import React from 'react';\n\nimport {getKeyNameStore} from './utils';\n\nexport default (getStores = {}) => App => {\n  return class AppWithMobx extends React.Component {\n    static async getInitialProps(appContext) {\n      let appProps = {};\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.store = {};\n      for (const fnName in getStores) {\n        const storeKeyName = getKeyNameStore(fnName);\n        appContext.ctx.store[storeKeyName] = getStores[fnName]();\n      }\n\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      return {\n        ...appProps,\n        initialMobxState: appContext.ctx.store,\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.store = {};\n\n      for (const fnName in getStores) {\n        const storeKeyName = getKeyNameStore(fnName);\n        this.store[storeKeyName] = getStores[fnName](\n          props.initialMobxState[storeKeyName],\n        );\n      }\n    }\n\n    render() {\n      const {initialMobxState, ...props} = this.props;\n\n      return <App {...props} store={{...this.store}} />;\n    }\n  };\n};\n"],"file":"with-mobx.js"}